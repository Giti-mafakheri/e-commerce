{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport data from \"./data\";\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  return {\n    products: data.products\n  };\n};\n\nconst store = createStore(reducer, initialState, compose(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/giti/e-commerce/frontend/src/store.js"],"names":["applyMiddleware","createStore","data","initialState","reducer","state","action","products","store","compose","thunk"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAO;AAAEC,IAAAA,QAAQ,EAAEL,IAAI,CAACK;AAAjB,GAAP;AACD,CAFD;;AAIA,MAAMC,KAAK,GAAGP,WAAW,CACvBG,OADuB,EAEvBD,YAFuB,EAGvBM,OAAO,CAACT,eAAe,CAACU,KAAD,CAAhB,CAHgB,CAAzB;AAKA,eAAeF,KAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport data from \"./data\";\nconst initialState = {};\nconst reducer = (state, action) => {\n  return { products: data.products };\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  compose(applyMiddleware(thunk))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}